{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadInterface() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const navigate = useNavigate();\n  const handleFileSelect = file => {\n    console.log('📂 File selected:', {\n      name: file === null || file === void 0 ? void 0 : file.name,\n      type: file === null || file === void 0 ? void 0 : file.type,\n      size: file === null || file === void 0 ? void 0 : file.size\n    });\n    if (file && file.type.startsWith('video/')) {\n      console.log('✅ Valid video file selected');\n      setSelectedFile(file);\n      setUploadStatus('');\n    } else {\n      console.warn('❌ Invalid file type selected:', file === null || file === void 0 ? void 0 : file.type);\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n  const handleFileInputChange = e => {\n    console.log('🖱️ File input change event');\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n  const handleUpload = async file => {\n    if (!file) return;\n    console.log('🚀 Starting upload process...');\n    console.log('📁 File details:', {\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      lastModified: new Date(file.lastModified).toISOString()\n    });\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadStatus('Uploading video...');\n    const formData = new FormData();\n    formData.append('video', file);\n    console.log('📦 FormData created with video file');\n    try {\n      console.log('🌐 Making API call to /upload_video...');\n      const response = await fetch('http://localhost:8000/upload_video', {\n        method: 'POST',\n        body: formData\n      });\n      console.log('📡 Response received:', {\n        status: response.status,\n        statusText: response.statusText,\n        ok: response.ok\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('✅ Upload successful! Response data:', data);\n        setUploadStatus('Upload successful! Processing video...');\n        setUploadProgress(100);\n        console.log('🔄 Navigating to frames page in 1 second...');\n        // Wait a moment for processing to start, then navigate\n        setTimeout(() => {\n          console.log('🎬 Navigating to:', `/frames/${data.uuid}`);\n          navigate(`/frames/${data.uuid}`);\n        }, 1000);\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('❌ Upload failed:', {\n          status: response.status,\n          statusText: response.statusText,\n          errorData: errorData\n        });\n        throw new Error(errorData.detail || 'Upload failed');\n      }\n    } catch (error) {\n      console.error('💥 Upload error:', error);\n      setUploadStatus('Upload failed: ' + error.message);\n      setUploadProgress(0);\n    } finally {\n      console.log('🏁 Upload process completed');\n      setUploading(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    console.log('📥 File dropped');\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    console.log('📤 File drag over');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"Upload a video to remove flash and replace individual frames using AI.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-area\",\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: handleFileInputChange,\n          id: \"file-input\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"upload-label\",\n          children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Selected: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-info\",\n              children: [\"Size: \", formatFileSize(selectedFile.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDCC1 Drop video file here or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-hint\",\n              children: \"Supports MP4, AVI, MOV, and other video formats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUpload(selectedFile),\n        disabled: uploading,\n        className: \"upload-button\",\n        children: uploading ? 'Uploading...' : 'Upload Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: uploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), uploadStatus && !uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-status\",\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadInterface, \"PulQ9EAa396Yp2HNMa/Y38DNB7o=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadInterface;\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nfunction FrameDisplay() {\n  _s2();\n  const {\n    repoUuid\n  } = useParams();\n  const navigate = useNavigate();\n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      fetchTotalFrames(repoUuid);\n      fetchFramesFromRepo(repoUuid);\n    }\n  }, [repoUuid, currentPage]); // Only fetch when repoUuid or currentPage changes\n\n  const fetchTotalFrames = async uuid => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n  const fetchFramesFromRepo = async (uuid, silent = false) => {\n    if (!silent) {\n      setLoading(true);\n      console.log(`🔄 Fetching frames for ${uuid}, page ${currentPage}, start=${(currentPage - 1) * framesPerPage}, end=${(currentPage - 1) * framesPerPage + framesPerPage - 1}`);\n    }\n    try {\n      // Calculate the start and end indices for the current page\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n\n      // Check cache first\n      const cacheKey = `${uuid}-${start}-${end}`;\n      if (frameCache.has(cacheKey)) {\n        console.log(`📦 Using cached frames for ${cacheKey}`);\n        setFrames(frameCache.get(cacheKey));\n        setLastUpdate(new Date());\n        if (!silent) {\n          setLoading(false);\n        }\n        return;\n      }\n      console.log(`🌐 Making API request to: http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      console.log(`📡 Response status: ${response.status}`);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch frames: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(`✅ Received ${data.frames.length} frames`);\n\n      // Cache the result\n      frameCache.set(cacheKey, data.frames);\n\n      // Limit cache size to prevent memory issues\n      if (frameCache.size > 50) {\n        const firstKey = frameCache.keys().next().value;\n        frameCache.delete(firstKey);\n      }\n      setFrames(data.frames);\n      setLastUpdate(new Date());\n      if (!silent) {\n        console.log(`Frames loaded: ${data.frames.length} frames for page ${currentPage}`);\n      }\n    } catch (err) {\n      console.error(`❌ Error in fetchFramesFromRepo:`, err);\n      if (!silent) {\n        setError('Failed to load frames: ' + err.message);\n      }\n    } finally {\n      if (!silent) {\n        setLoading(false);\n        console.log(`🏁 Loading finished`);\n      }\n    }\n  };\n\n  // Pagination functions\n  const goToPage = useCallback(page => {\n    setCurrentPage(page);\n  }, []);\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Calculate current frames to display\n  const currentFrames = frames; // No need to slice since API returns only the frames for current page\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"The AI solution to remove flash from videos and replace individual frames in videos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"repo-info\",\n        children: [\"Viewing frames from repository: \", repoUuid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading frames...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total frames: \", totalFrames]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"last-update\",\n          children: [\"Last updated: \", lastUpdate.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchFramesFromRepo(repoUuid),\n          className: \"refresh-button\",\n          disabled: loading,\n          children: loading ? 'Refreshing...' : '🔄 Refresh'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frames-grid\",\n        children: currentFrames.map((framePath, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000/${framePath}`,\n            alt: `Frame ${(currentPage - 1) * framesPerPage + index + 1}`,\n            className: \"frame-image\",\n            loading: \"lazy\",\n            onError: e => {\n              console.error(`Failed to load image: ${framePath}`);\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frame-info\",\n            children: [\"Frame \", (currentPage - 1) * framesPerPage + index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), totalFrames > framesPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPrevPage,\n          disabled: currentPage === 1,\n          className: \"page-button\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-numbers\",\n          children: Array.from({\n            length: Math.ceil(totalFrames / framesPerPage)\n          }, (_, i) => i + 1).filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) || page >= currentPage - 2 && page <= currentPage + 2).map((page, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [index > 0 && array[index - 1] !== page - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-ellipsis\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToPage(page),\n              className: `page-button ${currentPage === page ? 'active' : ''}`,\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 23\n            }, this)]\n          }, page, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextPage,\n          disabled: currentPage === Math.ceil(totalFrames / framesPerPage),\n          className: \"page-button\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n_s2(FrameDisplay, \"npeqYaehoB8uQM5zfN9rnGAWi4E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = FrameDisplay;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UploadInterface, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/frames/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UploadInterface\");\n$RefreshReg$(_c2, \"FrameDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","useParams","useNavigate","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadInterface","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","navigate","handleFileSelect","file","console","log","name","type","size","startsWith","warn","handleFileInputChange","e","target","files","handleUpload","lastModified","Date","toISOString","formData","FormData","append","response","fetch","method","body","status","statusText","ok","data","json","setTimeout","uuid","errorData","catch","error","Error","detail","message","handleDrop","preventDefault","dataTransfer","handleDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","accept","onChange","id","style","display","htmlFor","formatFileSize","onClick","disabled","width","_c","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","FrameDisplay","_s2","repoUuid","frames","setFrames","loading","setLoading","setError","totalFrames","setTotalFrames","currentPage","setCurrentPage","lastUpdate","setLastUpdate","framesPerPage","frameCache","Map","fetchTotalFrames","fetchFramesFromRepo","total","err","silent","start","end","cacheKey","has","get","errorText","text","length","set","firstKey","keys","next","value","delete","goToPage","page","goToNextPage","ceil","goToPrevPage","currentFrames","toLocaleTimeString","map","framePath","index","src","alt","onError","Array","from","_","filter","array","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction UploadInterface() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const navigate = useNavigate();\n\n  const handleFileSelect = (file) => {\n    console.log('📂 File selected:', {\n      name: file?.name,\n      type: file?.type,\n      size: file?.size\n    });\n    \n    if (file && file.type.startsWith('video/')) {\n      console.log('✅ Valid video file selected');\n      setSelectedFile(file);\n      setUploadStatus('');\n    } else {\n      console.warn('❌ Invalid file type selected:', file?.type);\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n\n  const handleFileInputChange = (e) => {\n    console.log('🖱️ File input change event');\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleUpload = async (file) => {\n    if (!file) return;\n\n    console.log('🚀 Starting upload process...');\n    console.log('📁 File details:', {\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      lastModified: new Date(file.lastModified).toISOString()\n    });\n\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadStatus('Uploading video...');\n\n    const formData = new FormData();\n    formData.append('video', file);\n    console.log('📦 FormData created with video file');\n\n    try {\n      console.log('🌐 Making API call to /upload_video...');\n      const response = await fetch('http://localhost:8000/upload_video', {\n        method: 'POST',\n        body: formData,\n      });\n\n      console.log('📡 Response received:', {\n        status: response.status,\n        statusText: response.statusText,\n        ok: response.ok\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log('✅ Upload successful! Response data:', data);\n        setUploadStatus('Upload successful! Processing video...');\n        setUploadProgress(100);\n        \n        console.log('🔄 Navigating to frames page in 1 second...');\n        // Wait a moment for processing to start, then navigate\n        setTimeout(() => {\n          console.log('🎬 Navigating to:', `/frames/${data.uuid}`);\n          navigate(`/frames/${data.uuid}`);\n        }, 1000);\n      } else {\n        const errorData = await response.json().catch(() => ({}));\n        console.error('❌ Upload failed:', {\n          status: response.status,\n          statusText: response.statusText,\n          errorData: errorData\n        });\n        throw new Error(errorData.detail || 'Upload failed');\n      }\n    } catch (error) {\n      console.error('💥 Upload error:', error);\n      setUploadStatus('Upload failed: ' + error.message);\n      setUploadProgress(0);\n    } finally {\n      console.log('🏁 Upload process completed');\n      setUploading(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    console.log('📥 File dropped');\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    console.log('📤 File drag over');\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          Upload a video to remove flash and replace individual frames using AI.\n        </p>\n      </header>\n      \n      <div className=\"upload-container\">\n        <div \n          className=\"upload-area\"\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            accept=\"video/*\"\n            onChange={handleFileInputChange}\n            id=\"file-input\"\n            style={{ display: 'none' }}\n          />\n          <label htmlFor=\"file-input\" className=\"upload-label\">\n            {selectedFile ? (\n              <div>\n                <p>Selected: {selectedFile.name}</p>\n                <p className=\"file-info\">\n                  Size: {formatFileSize(selectedFile.size)}\n                </p>\n              </div>\n            ) : (\n              <div>\n                <p>📁 Drop video file here or click to select</p>\n                <p className=\"upload-hint\">Supports MP4, AVI, MOV, and other video formats</p>\n              </div>\n            )}\n          </label>\n        </div>\n\n        {selectedFile && (\n          <button \n            onClick={() => handleUpload(selectedFile)}\n            disabled={uploading}\n            className=\"upload-button\"\n          >\n            {uploading ? 'Uploading...' : 'Upload Video'}\n          </button>\n        )}\n\n        {uploading && (\n          <div className=\"upload-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${uploadProgress}%` }}\n              ></div>\n            </div>\n            <p>{uploadStatus}</p>\n          </div>\n        )}\n\n        {uploadStatus && !uploading && (\n          <p className=\"upload-status\">{uploadStatus}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction FrameDisplay() {\n  const { repoUuid } = useParams();\n  const navigate = useNavigate();\n  \n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  \n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      fetchTotalFrames(repoUuid);\n      fetchFramesFromRepo(repoUuid);\n    }\n  }, [repoUuid, currentPage]); // Only fetch when repoUuid or currentPage changes\n\n  const fetchTotalFrames = async (uuid) => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n\n  const fetchFramesFromRepo = async (uuid, silent = false) => {\n    if (!silent) {\n      setLoading(true);\n      console.log(`🔄 Fetching frames for ${uuid}, page ${currentPage}, start=${(currentPage - 1) * framesPerPage}, end=${(currentPage - 1) * framesPerPage + framesPerPage - 1}`);\n    }\n    \n    try {\n      // Calculate the start and end indices for the current page\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n      \n      // Check cache first\n      const cacheKey = `${uuid}-${start}-${end}`;\n      if (frameCache.has(cacheKey)) {\n        console.log(`📦 Using cached frames for ${cacheKey}`);\n        setFrames(frameCache.get(cacheKey));\n        setLastUpdate(new Date());\n        if (!silent) {\n          setLoading(false);\n        }\n        return;\n      }\n      \n      console.log(`🌐 Making API request to: http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      console.log(`📡 Response status: ${response.status}`);\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch frames: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      console.log(`✅ Received ${data.frames.length} frames`);\n      \n      // Cache the result\n      frameCache.set(cacheKey, data.frames);\n      \n      // Limit cache size to prevent memory issues\n      if (frameCache.size > 50) {\n        const firstKey = frameCache.keys().next().value;\n        frameCache.delete(firstKey);\n      }\n      \n      setFrames(data.frames);\n      setLastUpdate(new Date());\n      \n      if (!silent) {\n        console.log(`Frames loaded: ${data.frames.length} frames for page ${currentPage}`);\n      }\n    } catch (err) {\n      console.error(`❌ Error in fetchFramesFromRepo:`, err);\n      if (!silent) {\n        setError('Failed to load frames: ' + err.message);\n      }\n    } finally {\n      if (!silent) {\n        setLoading(false);\n        console.log(`🏁 Loading finished`);\n      }\n    }\n  };\n\n  // Pagination functions\n  const goToPage = useCallback((page) => {\n    setCurrentPage(page);\n  }, []);\n\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Calculate current frames to display\n  const currentFrames = frames; // No need to slice since API returns only the frames for current page\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          The AI solution to remove flash from videos and replace individual frames in videos.\n        </p>\n        <p className=\"repo-info\">\n          Viewing frames from repository: {repoUuid}\n        </p>\n        <button \n          onClick={() => navigate('/')} \n          className=\"back-button\"\n        >\n          ← Back to Upload\n        </button>\n      </header>\n\n      {loading ? (\n        <div className=\"loading\">Loading frames...</div>\n      ) : (\n        <>\n          <div className=\"info\">\n            <p>Total frames: {totalFrames}</p>\n            {lastUpdate && (\n              <p className=\"last-update\">\n                Last updated: {lastUpdate.toLocaleTimeString()}\n              </p>\n            )}\n            <button \n              onClick={() => fetchFramesFromRepo(repoUuid)} \n              className=\"refresh-button\"\n              disabled={loading}\n            >\n              {loading ? 'Refreshing...' : '🔄 Refresh'}\n            </button>\n          </div>\n\n          <div className=\"frames-grid\">\n            {currentFrames.map((framePath, index) => (\n              <div key={index} className=\"frame-container\">\n                <img \n                  src={`http://localhost:8000/${framePath}`}\n                  alt={`Frame ${(currentPage - 1) * framesPerPage + index + 1}`}\n                  className=\"frame-image\"\n                  loading=\"lazy\"\n                  onError={(e) => {\n                    console.error(`Failed to load image: ${framePath}`);\n                    e.target.style.display = 'none';\n                  }}\n                />\n                <div className=\"frame-info\">\n                  Frame {(currentPage - 1) * framesPerPage + index + 1}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {totalFrames > framesPerPage && (\n            <div className=\"pagination\">\n              <button \n                onClick={goToPrevPage} \n                disabled={currentPage === 1}\n                className=\"page-button\"\n              >\n                ← Previous\n              </button>\n              \n              <div className=\"page-numbers\">\n                {Array.from({ length: Math.ceil(totalFrames / framesPerPage) }, (_, i) => i + 1)\n                  .filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) ||\n                                 (page >= currentPage - 2 && page <= currentPage + 2))\n                  .map((page, index, array) => (\n                    <React.Fragment key={page}>\n                      {index > 0 && array[index - 1] !== page - 1 && (\n                        <span className=\"page-ellipsis\">...</span>\n                      )}\n                      <button\n                        onClick={() => goToPage(page)}\n                        className={`page-button ${currentPage === page ? 'active' : ''}`}\n                      >\n                        {page}\n                      </button>\n                    </React.Fragment>\n                  ))}\n              </div>\n              \n              <button \n                onClick={goToNextPage} \n                disabled={currentPage === Math.ceil(totalFrames / framesPerPage)}\n                className=\"page-button\"\n              >\n                Next →\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      {error && (\n        <div className=\"error\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<UploadInterface />} />\n      <Route path=\"/frames/:repoUuid\" element={<FrameDisplay />} />\n      <Route path=\"/:repoUuid\" element={<FrameDisplay />} />\n    </Routes>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}