{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadInterface() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSpeed, setUploadSpeed] = useState(0);\n  const [uploadStartTime, setUploadStartTime] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [repoUuid, setRepoUuid] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const [totalFrames, setTotalFrames] = useState(0);\n  const navigate = useNavigate();\n  const handleFileSelect = file => {\n    console.log('📂 File selected:', {\n      name: file === null || file === void 0 ? void 0 : file.name,\n      type: file === null || file === void 0 ? void 0 : file.type,\n      size: file === null || file === void 0 ? void 0 : file.size\n    });\n    if (file && file.type.startsWith('video/')) {\n      console.log('✅ Valid video file selected');\n      setSelectedFile(file);\n      setUploadStatus('');\n      // Automatically start upload when file is selected\n      handleUpload(file);\n    } else {\n      console.warn('❌ Invalid file type selected:', file === null || file === void 0 ? void 0 : file.type);\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n  const handleFileInputChange = e => {\n    console.log('🖱️ File input change event');\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n  const handleUpload = useCallback(async file => {\n    if (!file) return;\n    console.log(`🚀 Starting upload for file: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`);\n    const startTime = Date.now();\n    setUploadStatus('Uploading...');\n    setUploadProgress(0);\n    setUploadSpeed('');\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('file', file);\n    const xhr = new XMLHttpRequest();\n    xhr.upload.addEventListener('progress', event => {\n      if (event.lengthComputable) {\n        const percentComplete = event.loaded / event.total * 100;\n        const elapsed = (Date.now() - startTime) / 1000;\n        const speed = (event.loaded / 1024 / 1024 / elapsed).toFixed(2);\n        console.log(`📤 Upload progress: ${percentComplete.toFixed(1)}% (${speed} MB/s)`);\n        setUploadProgress(percentComplete);\n        setUploadSpeed(`${speed} MB/s`);\n      }\n    });\n    xhr.addEventListener('load', () => {\n      const uploadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.log(`✅ Upload completed in ${uploadTime}s`);\n      if (xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\n        console.log(`🎯 Backend assigned UUID: ${response.uuid}`);\n        setRepoUuid(response.uuid);\n        setUploadStatus('Upload successful! Video processing started...');\n        setIsUploading(false);\n        setUploadProgress(100);\n        setUploadSpeed('');\n\n        // Immediately navigate to frames page\n        console.log(`🚀 Navigating to frames page: /frames/${response.uuid}`);\n        navigate(`/frames/${response.uuid}`);\n      } else {\n        console.error(`❌ Upload failed with status ${xhr.status}: ${xhr.responseText}`);\n        setUploadStatus('Upload failed!');\n        setIsUploading(false);\n      }\n    });\n    xhr.addEventListener('error', () => {\n      const uploadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.error(`💥 Upload error after ${uploadTime}s: Network error`);\n      setUploadStatus('Upload failed! Network error');\n      setIsUploading(false);\n    });\n    xhr.addEventListener('timeout', () => {\n      const uploadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.error(`⏰ Upload timeout after ${uploadTime}s`);\n      setUploadStatus('Upload failed! Timeout');\n      setIsUploading(false);\n    });\n    xhr.open('POST', 'http://localhost:8000/upload_video');\n    xhr.timeout = 600000; // 10 minutes\n    console.log(`🌐 Sending request to backend...`);\n    xhr.send(formData);\n  }, []);\n  const checkProcessingStatus = useCallback(async uuid => {\n    if (!uuid) return;\n    try {\n      console.log(`🔍 Checking processing status for ${uuid}...`);\n      const response = await fetch(`http://localhost:8000/${uuid}/status`);\n      const data = await response.json();\n      console.log(`📊 Processing status: ${JSON.stringify(data)}`);\n\n      // Update total frames count\n      setTotalFrames(data.frame_count);\n      if (data.processing_complete) {\n        console.log(`🎉 Video processing completed! Found ${data.frame_count} frames`);\n        setIsProcessing(false);\n        setProcessingStatus('Processing complete!');\n      } else {\n        console.log(`⏳ Still processing... (${data.frame_count} frames, metadata: ${data.has_metadata})`);\n        setProcessingStatus(`Processing video... (${data.frame_count} frames available)`);\n        setIsProcessing(true);\n      }\n    } catch (error) {\n      console.error(`❌ Error checking processing status: ${error}`);\n      setProcessingStatus('Error checking status');\n    }\n  }, []);\n  const handleDrop = e => {\n    e.preventDefault();\n    console.log('📥 File dropped');\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    console.log('📤 File drag over');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"Upload a video to remove flash and replace individual frames using AI.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-area ${selectedFile ? 'has-file' : ''} ${isUploading ? 'uploading' : ''}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: handleFileInputChange,\n          id: \"file-input\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"upload-label\",\n          children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Selected: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-info\",\n              children: [\"Size: \", formatFileSize(selectedFile.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), isUploading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-status\",\n              children: \"Uploading automatically...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"processing-status\",\n              children: \"Processing video...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDCC1 Drop video file here or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-hint\",\n              children: \"Upload starts automatically when video is selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: uploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), uploadSpeed && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"upload-speed\",\n          children: [\"Speed: \", uploadSpeed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing-status\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"processing-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: processingStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"processing-hint\",\n          children: \"This may take several minutes for large videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), uploadStatus && !isUploading && !isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-status\",\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadInterface, \"HBqqDkk9MH0uVNe+mmsRt/HmPlY=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadInterface;\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nfunction FrameDisplay() {\n  _s2();\n  const {\n    repoUuid\n  } = useParams();\n  const navigate = useNavigate();\n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(true);\n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n  const checkProcessingStatus = useCallback(async uuid => {\n    if (!uuid) return;\n    try {\n      console.log(`🔍 Checking processing status for ${uuid}...`);\n      const response = await fetch(`http://localhost:8000/${uuid}/status`);\n      const data = await response.json();\n      console.log(`📊 Processing status: ${JSON.stringify(data)}`);\n      if (data.processing_complete) {\n        console.log(`🎉 Video processing completed! Found ${data.frame_count} frames`);\n        setIsProcessing(false);\n        setProcessingStatus('Processing complete!');\n        setTotalFrames(data.frame_count);\n        loadFrames(uuid);\n      } else {\n        console.log(`⏳ Still processing... (${data.frame_count} frames, metadata: ${data.has_metadata})`);\n        setProcessingStatus(`Processing video... (${data.frame_count} frames)`);\n        // Continue checking\n        setTimeout(() => checkProcessingStatus(uuid), 3000);\n      }\n    } catch (error) {\n      console.error(`❌ Error checking processing status: ${error}`);\n      setProcessingStatus('Error checking status');\n    }\n  }, []);\n  const loadFrames = useCallback(async uuid => {\n    if (!uuid) return;\n    try {\n      console.log(`🖼️ Loading frames for ${uuid}, page ${currentPage}...`);\n      setLoading(true);\n      const startTime = Date.now();\n\n      // Calculate pagination\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const data = await response.json();\n      const loadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.log(`✅ Loaded ${data.frames.length} frames in ${loadTime}s`);\n      setFrames(data.frames);\n      setLoading(false);\n      setLastUpdate(new Date());\n    } catch (error) {\n      console.error(`❌ Error loading frames: ${error}`);\n      setError('Failed to load frames: ' + error.message);\n      setLoading(false);\n    }\n  }, [currentPage, framesPerPage]);\n\n  // Pagination functions\n  const goToPage = useCallback(page => {\n    setCurrentPage(page);\n  }, []);\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Load frames when page changes\n  useEffect(() => {\n    if (repoUuid) {\n      loadFrames(repoUuid);\n    }\n  }, [repoUuid, currentPage, loadFrames]);\n\n  // Check processing status periodically\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n\n      // Check processing status first\n      checkProcessingStatus(repoUuid);\n\n      // Set up polling for processing status\n      const interval = setInterval(() => {\n        checkProcessingStatus(repoUuid);\n      }, 3000); // Check every 3 seconds\n\n      return () => clearInterval(interval);\n    }\n  }, [repoUuid, checkProcessingStatus]);\n  const fetchTotalFrames = async uuid => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"The AI solution to remove flash from videos and replace individual frames in videos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"repo-info\",\n        children: [\"Viewing frames from repository: \", repoUuid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"processing-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), \"Processing video...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this), processingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '0.9rem',\n          color: '#666'\n        },\n        children: [processingStatus.frame_count > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\u2705 \", processingStatus.frame_count, \" frames extracted\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\u23F3 Extracting frames...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '5px',\n            fontSize: '0.8rem',\n            color: '#888'\n          },\n          children: \"This may take several minutes for large videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '15px',\n          fontSize: '0.8rem',\n          color: '#888'\n        },\n        children: \"\\u23F1\\uFE0F Processing time depends on video size and length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this) : loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading frames...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total frames: \", totalFrames]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#ffa500',\n            fontWeight: '500'\n          },\n          children: [\"\\u23F3 \", processingStatus]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this), !isProcessing && totalFrames > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#28a745',\n            fontWeight: '500'\n          },\n          children: [\"\\u2705 Processing complete! \", totalFrames, \" frames available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 15\n        }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"last-update\",\n          children: [\"Last updated: \", lastUpdate.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadFrames(repoUuid),\n          className: \"refresh-button\",\n          disabled: loading,\n          children: loading ? 'Refreshing...' : '🔄 Refresh'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frames-grid\",\n        children: frames.map((framePath, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000/static/${repoUuid}/${framePath}`,\n            alt: `Frame ${(currentPage - 1) * framesPerPage + index + 1}`,\n            className: \"frame-image\",\n            loading: \"lazy\",\n            onError: e => {\n              console.error(`Failed to load image: ${framePath}`);\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frame-info\",\n            children: [\"Frame \", (currentPage - 1) * framesPerPage + index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), totalFrames > framesPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPrevPage,\n          disabled: currentPage === 1,\n          className: \"page-button\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-numbers\",\n          children: Array.from({\n            length: Math.ceil(totalFrames / framesPerPage)\n          }, (_, i) => i + 1).filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) || page >= currentPage - 2 && page <= currentPage + 2).map((page, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [index > 0 && array[index - 1] !== page - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-ellipsis\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToPage(page),\n              className: `page-button ${currentPage === page ? 'active' : ''}`,\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 23\n            }, this)]\n          }, page, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextPage,\n          disabled: currentPage === Math.ceil(totalFrames / framesPerPage),\n          className: \"page-button\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s2(FrameDisplay, \"WCjz16KrvkcJsaJl29mbgl866LA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = FrameDisplay;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UploadInterface, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/frames/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 505,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UploadInterface\");\n$RefreshReg$(_c2, \"FrameDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","useParams","useNavigate","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadInterface","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSpeed","setUploadSpeed","uploadStartTime","setUploadStartTime","isUploading","setIsUploading","repoUuid","setRepoUuid","isProcessing","setIsProcessing","processingStatus","setProcessingStatus","totalFrames","setTotalFrames","navigate","handleFileSelect","file","console","log","name","type","size","startsWith","handleUpload","warn","handleFileInputChange","e","target","files","toFixed","startTime","Date","now","formData","FormData","append","xhr","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentComplete","loaded","total","elapsed","speed","uploadTime","status","response","JSON","parse","responseText","uuid","error","open","timeout","send","checkProcessingStatus","fetch","data","json","stringify","frame_count","processing_complete","has_metadata","handleDrop","preventDefault","dataTransfer","handleDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","accept","onChange","id","style","display","htmlFor","formatFileSize","width","_c","bytes","k","sizes","i","Math","floor","parseFloat","pow","FrameDisplay","_s2","frames","setFrames","loading","setLoading","setError","currentPage","setCurrentPage","lastUpdate","setLastUpdate","framesPerPage","frameCache","Map","loadFrames","setTimeout","start","end","loadTime","length","message","goToPage","page","goToNextPage","ceil","goToPrevPage","interval","setInterval","clearInterval","fetchTotalFrames","ok","err","onClick","marginTop","fontSize","color","fontWeight","toLocaleTimeString","disabled","map","framePath","index","src","alt","onError","Array","from","_","filter","array","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction UploadInterface() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSpeed, setUploadSpeed] = useState(0);\n  const [uploadStartTime, setUploadStartTime] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [repoUuid, setRepoUuid] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [processingStatus, setProcessingStatus] = useState('');\n  const [totalFrames, setTotalFrames] = useState(0);\n  const navigate = useNavigate();\n\n  const handleFileSelect = (file) => {\n    console.log('📂 File selected:', {\n      name: file?.name,\n      type: file?.type,\n      size: file?.size\n    });\n    \n    if (file && file.type.startsWith('video/')) {\n      console.log('✅ Valid video file selected');\n      setSelectedFile(file);\n      setUploadStatus('');\n      // Automatically start upload when file is selected\n      handleUpload(file);\n    } else {\n      console.warn('❌ Invalid file type selected:', file?.type);\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n\n  const handleFileInputChange = (e) => {\n    console.log('🖱️ File input change event');\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleUpload = useCallback(async (file) => {\n    if (!file) return;\n\n    console.log(`🚀 Starting upload for file: ${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`);\n    const startTime = Date.now();\n\n    setUploadStatus('Uploading...');\n    setUploadProgress(0);\n    setUploadSpeed('');\n    setIsUploading(true);\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const xhr = new XMLHttpRequest();\n    \n    xhr.upload.addEventListener('progress', (event) => {\n      if (event.lengthComputable) {\n        const percentComplete = (event.loaded / event.total) * 100;\n        const elapsed = (Date.now() - startTime) / 1000;\n        const speed = (event.loaded / 1024 / 1024 / elapsed).toFixed(2);\n        \n        console.log(`📤 Upload progress: ${percentComplete.toFixed(1)}% (${speed} MB/s)`);\n        setUploadProgress(percentComplete);\n        setUploadSpeed(`${speed} MB/s`);\n      }\n    });\n\n    xhr.addEventListener('load', () => {\n      const uploadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.log(`✅ Upload completed in ${uploadTime}s`);\n      \n      if (xhr.status === 200) {\n        const response = JSON.parse(xhr.responseText);\n        console.log(`🎯 Backend assigned UUID: ${response.uuid}`);\n        setRepoUuid(response.uuid);\n        setUploadStatus('Upload successful! Video processing started...');\n        setIsUploading(false);\n        setUploadProgress(100);\n        setUploadSpeed('');\n        \n        // Immediately navigate to frames page\n        console.log(`🚀 Navigating to frames page: /frames/${response.uuid}`);\n        navigate(`/frames/${response.uuid}`);\n      } else {\n        console.error(`❌ Upload failed with status ${xhr.status}: ${xhr.responseText}`);\n        setUploadStatus('Upload failed!');\n        setIsUploading(false);\n      }\n    });\n\n    xhr.addEventListener('error', () => {\n      const uploadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.error(`💥 Upload error after ${uploadTime}s: Network error`);\n      setUploadStatus('Upload failed! Network error');\n      setIsUploading(false);\n    });\n\n    xhr.addEventListener('timeout', () => {\n      const uploadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.error(`⏰ Upload timeout after ${uploadTime}s`);\n      setUploadStatus('Upload failed! Timeout');\n      setIsUploading(false);\n    });\n\n    xhr.open('POST', 'http://localhost:8000/upload_video');\n    xhr.timeout = 600000; // 10 minutes\n    console.log(`🌐 Sending request to backend...`);\n    xhr.send(formData);\n  }, []);\n\n  const checkProcessingStatus = useCallback(async (uuid) => {\n    if (!uuid) return;\n    \n    try {\n      console.log(`🔍 Checking processing status for ${uuid}...`);\n      const response = await fetch(`http://localhost:8000/${uuid}/status`);\n      const data = await response.json();\n      \n      console.log(`📊 Processing status: ${JSON.stringify(data)}`);\n      \n      // Update total frames count\n      setTotalFrames(data.frame_count);\n      \n      if (data.processing_complete) {\n        console.log(`🎉 Video processing completed! Found ${data.frame_count} frames`);\n        setIsProcessing(false);\n        setProcessingStatus('Processing complete!');\n      } else {\n        console.log(`⏳ Still processing... (${data.frame_count} frames, metadata: ${data.has_metadata})`);\n        setProcessingStatus(`Processing video... (${data.frame_count} frames available)`);\n        setIsProcessing(true);\n      }\n    } catch (error) {\n      console.error(`❌ Error checking processing status: ${error}`);\n      setProcessingStatus('Error checking status');\n    }\n  }, []);\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    console.log('📥 File dropped');\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    console.log('📤 File drag over');\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          Upload a video to remove flash and replace individual frames using AI.\n        </p>\n      </header>\n      \n      <div className=\"upload-container\">\n        <div \n          className={`upload-area ${selectedFile ? 'has-file' : ''} ${isUploading ? 'uploading' : ''}`}\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            accept=\"video/*\"\n            onChange={handleFileInputChange}\n            id=\"file-input\"\n            style={{ display: 'none' }}\n          />\n          <label htmlFor=\"file-input\" className=\"upload-label\">\n            {selectedFile ? (\n              <div>\n                <p>Selected: {selectedFile.name}</p>\n                <p className=\"file-info\">\n                  Size: {formatFileSize(selectedFile.size)}\n                </p>\n                {isUploading && <p className=\"upload-status\">Uploading automatically...</p>}\n                {isProcessing && <p className=\"processing-status\">Processing video...</p>}\n              </div>\n            ) : (\n              <div>\n                <p>📁 Drop video file here or click to select</p>\n                <p className=\"upload-hint\">Upload starts automatically when video is selected</p>\n              </div>\n            )}\n          </label>\n        </div>\n\n        {isUploading && (\n          <div className=\"upload-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${uploadProgress}%` }}\n              ></div>\n            </div>\n            <p>{uploadStatus}</p>\n            {uploadSpeed && (\n              <p className=\"upload-speed\">Speed: {uploadSpeed}</p>\n            )}\n          </div>\n        )}\n\n        {isProcessing && (\n          <div className=\"processing-status\">\n            <div className=\"processing-spinner\"></div>\n            <p>{processingStatus}</p>\n            <p className=\"processing-hint\">This may take several minutes for large videos</p>\n          </div>\n        )}\n\n        {uploadStatus && !isUploading && !isProcessing && (\n          <p className=\"upload-status\">{uploadStatus}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction FrameDisplay() {\n  const { repoUuid } = useParams();\n  const navigate = useNavigate();\n  \n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const [processingStatus, setProcessingStatus] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(true);\n  \n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n\n  const checkProcessingStatus = useCallback(async (uuid) => {\n    if (!uuid) return;\n    \n    try {\n      console.log(`🔍 Checking processing status for ${uuid}...`);\n      const response = await fetch(`http://localhost:8000/${uuid}/status`);\n      const data = await response.json();\n      \n      console.log(`📊 Processing status: ${JSON.stringify(data)}`);\n      \n      if (data.processing_complete) {\n        console.log(`🎉 Video processing completed! Found ${data.frame_count} frames`);\n        setIsProcessing(false);\n        setProcessingStatus('Processing complete!');\n        setTotalFrames(data.frame_count);\n        loadFrames(uuid);\n      } else {\n        console.log(`⏳ Still processing... (${data.frame_count} frames, metadata: ${data.has_metadata})`);\n        setProcessingStatus(`Processing video... (${data.frame_count} frames)`);\n        // Continue checking\n        setTimeout(() => checkProcessingStatus(uuid), 3000);\n      }\n    } catch (error) {\n      console.error(`❌ Error checking processing status: ${error}`);\n      setProcessingStatus('Error checking status');\n    }\n  }, []);\n\n  const loadFrames = useCallback(async (uuid) => {\n    if (!uuid) return;\n    \n    try {\n      console.log(`🖼️ Loading frames for ${uuid}, page ${currentPage}...`);\n      setLoading(true);\n      const startTime = Date.now();\n      \n      // Calculate pagination\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n      \n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const data = await response.json();\n      \n      const loadTime = ((Date.now() - startTime) / 1000).toFixed(2);\n      console.log(`✅ Loaded ${data.frames.length} frames in ${loadTime}s`);\n      \n      setFrames(data.frames);\n      setLoading(false);\n      setLastUpdate(new Date());\n    } catch (error) {\n      console.error(`❌ Error loading frames: ${error}`);\n      setError('Failed to load frames: ' + error.message);\n      setLoading(false);\n    }\n  }, [currentPage, framesPerPage]);\n\n  // Pagination functions\n  const goToPage = useCallback((page) => {\n    setCurrentPage(page);\n  }, []);\n\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Load frames when page changes\n  useEffect(() => {\n    if (repoUuid) {\n      loadFrames(repoUuid);\n    }\n  }, [repoUuid, currentPage, loadFrames]);\n\n  // Check processing status periodically\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      \n      // Check processing status first\n      checkProcessingStatus(repoUuid);\n      \n      // Set up polling for processing status\n      const interval = setInterval(() => {\n        checkProcessingStatus(repoUuid);\n      }, 3000); // Check every 3 seconds\n      \n      return () => clearInterval(interval);\n    }\n  }, [repoUuid, checkProcessingStatus]);\n\n  const fetchTotalFrames = async (uuid) => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          The AI solution to remove flash from videos and replace individual frames in videos.\n        </p>\n        <p className=\"repo-info\">\n          Viewing frames from repository: {repoUuid}\n        </p>\n        <button \n          onClick={() => navigate('/')} \n          className=\"back-button\"\n        >\n          ← Back to Upload\n        </button>\n      </header>\n\n      {isProcessing ? (\n        <div className=\"loading\">\n          <div>\n            <span className=\"processing-spinner\"></span>\n            Processing video...\n          </div>\n          {processingStatus && (\n            <div style={{ marginTop: '10px', fontSize: '0.9rem', color: '#666' }}>\n              {processingStatus.frame_count > 0 ? (\n                <div>✅ {processingStatus.frame_count} frames extracted</div>\n              ) : (\n                <div>⏳ Extracting frames...</div>\n              )}\n              <div style={{ marginTop: '5px', fontSize: '0.8rem', color: '#888' }}>\n                This may take several minutes for large videos\n              </div>\n            </div>\n          )}\n          <div style={{ marginTop: '15px', fontSize: '0.8rem', color: '#888' }}>\n            ⏱️ Processing time depends on video size and length\n          </div>\n        </div>\n      ) : loading ? (\n        <div className=\"loading\">Loading frames...</div>\n      ) : (\n        <>\n          <div className=\"info\">\n            <p>Total frames: {totalFrames}</p>\n            {isProcessing && (\n              <p style={{ color: '#ffa500', fontWeight: '500' }}>\n                ⏳ {processingStatus}\n              </p>\n            )}\n            {!isProcessing && totalFrames > 0 && (\n              <p style={{ color: '#28a745', fontWeight: '500' }}>\n                ✅ Processing complete! {totalFrames} frames available\n              </p>\n            )}\n            {lastUpdate && (\n              <p className=\"last-update\">\n                Last updated: {lastUpdate.toLocaleTimeString()}\n              </p>\n            )}\n            <button \n              onClick={() => loadFrames(repoUuid)} \n              className=\"refresh-button\"\n              disabled={loading}\n            >\n              {loading ? 'Refreshing...' : '🔄 Refresh'}\n            </button>\n          </div>\n\n          <div className=\"frames-grid\">\n            {frames.map((framePath, index) => (\n              <div key={index} className=\"frame-container\">\n                <img \n                  src={`http://localhost:8000/static/${repoUuid}/${framePath}`}\n                  alt={`Frame ${(currentPage - 1) * framesPerPage + index + 1}`}\n                  className=\"frame-image\"\n                  loading=\"lazy\"\n                  onError={(e) => {\n                    console.error(`Failed to load image: ${framePath}`);\n                    e.target.style.display = 'none';\n                  }}\n                />\n                <div className=\"frame-info\">\n                  Frame {(currentPage - 1) * framesPerPage + index + 1}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {totalFrames > framesPerPage && (\n            <div className=\"pagination\">\n              <button \n                onClick={goToPrevPage} \n                disabled={currentPage === 1}\n                className=\"page-button\"\n              >\n                ← Previous\n              </button>\n              \n              <div className=\"page-numbers\">\n                {Array.from({ length: Math.ceil(totalFrames / framesPerPage) }, (_, i) => i + 1)\n                  .filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) ||\n                                 (page >= currentPage - 2 && page <= currentPage + 2))\n                  .map((page, index, array) => (\n                    <React.Fragment key={page}>\n                      {index > 0 && array[index - 1] !== page - 1 && (\n                        <span className=\"page-ellipsis\">...</span>\n                      )}\n                      <button\n                        onClick={() => goToPage(page)}\n                        className={`page-button ${currentPage === page ? 'active' : ''}`}\n                      >\n                        {page}\n                      </button>\n                    </React.Fragment>\n                  ))}\n              </div>\n              \n              <button \n                onClick={goToNextPage} \n                disabled={currentPage === Math.ceil(totalFrames / framesPerPage)}\n                className=\"page-button\"\n              >\n                Next →\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      {error && (\n        <div className=\"error\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<UploadInterface />} />\n      <Route path=\"/frames/:repoUuid\" element={<FrameDisplay />} />\n      <Route path=\"/:repoUuid\" element={<FrameDisplay />} />\n    </Routes>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}