{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [accessLink, setAccessLink] = useState(null);\n\n  // Handle drag and drop events\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, []);\n\n  // Handle file selection (both drag & drop and click)\n  const handleFileSelect = file => {\n    setError(null);\n    setAccessLink(null);\n\n    // Check file type\n    const allowedTypes = ['video/mp4', 'video/avi', 'video/mov', 'video/quicktime'];\n    if (!allowedTypes.includes(file.type)) {\n      setError('Please select a valid video file (MP4, AVI, or MOV)');\n      return;\n    }\n\n    // Check file size (500MB limit)\n    const maxSize = 500 * 1024 * 1024; // 500MB in bytes\n    if (file.size > maxSize) {\n      setError('File size must be less than 500MB');\n      return;\n    }\n    setSelectedFile(file);\n\n    // Auto-start upload simulation\n    handleUpload(file);\n  };\n\n  // Handle file input change\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      handleFileSelect(file);\n    }\n  };\n\n  // Handle upload\n  const handleUpload = async file => {\n    if (!file) return;\n    setIsUploading(true);\n    setUploadProgress(0);\n    setError(null);\n    setAccessLink(null);\n    try {\n      // Create FormData for file upload\n      const formData = new FormData();\n      formData.append('video', file);\n\n      // Send file to backend with timeout\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 300000); // 5 minutes timeout\n\n      const response = await fetch('/api/upload-video', {\n        method: 'POST',\n        body: formData,\n        signal: controller.signal\n      });\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Upload failed');\n      }\n      const result = await response.json();\n\n      // Update progress to 100%\n      setUploadProgress(100);\n\n      // Store the access link\n      setAccessLink(result.access_link);\n      console.log('Upload successful:', result);\n      console.log('Repository UUID:', result.repo_uuid);\n      console.log('Access link:', result.access_link);\n    } catch (err) {\n      if (err.name === 'AbortError') {\n        setError('Upload timed out. Video processing is taking longer than expected.');\n      } else {\n        setError('Upload failed: ' + err.message);\n      }\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"The AI solution to remove flash from videos and replace individual frames in videos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-area ${isDragOver ? 'drag-over' : ''} ${selectedFile ? 'has-file' : ''}`,\n        onDragOver: handleDragOver,\n        onDragLeave: handleDragLeave,\n        onDrop: handleDrop,\n        children: !selectedFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Upload your video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop your video file here, or click to browse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"upload-limits\",\n            children: [\"Supported formats: MP4, AVI, MOV\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 49\n            }, this), \"Maximum size: 500MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"file-input\",\n            accept: \"video/mp4,video/avi,video/mov,video/quicktime\",\n            onChange: handleFileInputChange,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-input\",\n            className: \"browse-button\",\n            children: \"Browse Files\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-icon\",\n            children: \"\\uD83C\\uDFA5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", formatFileSize(selectedFile.size)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Type: \", selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), isUploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Uploading... \", uploadProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), accessLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your video is ready at: \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: accessLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: accessLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G9gkfGbgNNdpwkfY7cfDEcpkdnk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDragOver","setIsDragOver","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","isUploading","setIsUploading","error","setError","accessLink","setAccessLink","handleDragOver","e","preventDefault","handleDragLeave","handleDrop","files","Array","from","dataTransfer","length","handleFileSelect","file","allowedTypes","includes","type","maxSize","size","handleUpload","handleFileInputChange","target","formData","FormData","append","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","body","signal","clearTimeout","ok","errorData","json","Error","detail","result","access_link","console","log","repo_uuid","err","name","message","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","onDragLeave","onDrop","id","accept","onChange","style","display","htmlFor","width","href","rel","_c","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [accessLink, setAccessLink] = useState(null);\n\n  // Handle drag and drop events\n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    const files = Array.from(e.dataTransfer.files);\n    if (files.length > 0) {\n      handleFileSelect(files[0]);\n    }\n  }, []);\n\n  // Handle file selection (both drag & drop and click)\n  const handleFileSelect = (file) => {\n    setError(null);\n    setAccessLink(null);\n    \n    // Check file type\n    const allowedTypes = ['video/mp4', 'video/avi', 'video/mov', 'video/quicktime'];\n    if (!allowedTypes.includes(file.type)) {\n      setError('Please select a valid video file (MP4, AVI, or MOV)');\n      return;\n    }\n    \n    // Check file size (500MB limit)\n    const maxSize = 500 * 1024 * 1024; // 500MB in bytes\n    if (file.size > maxSize) {\n      setError('File size must be less than 500MB');\n      return;\n    }\n    \n    setSelectedFile(file);\n    \n    // Auto-start upload simulation\n    handleUpload(file);\n  };\n\n  // Handle file input change\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      handleFileSelect(file);\n    }\n  };\n\n  // Handle upload\n  const handleUpload = async (file) => {\n    if (!file) return;\n    \n    setIsUploading(true);\n    setUploadProgress(0);\n    setError(null);\n    setAccessLink(null);\n    \n    try {\n      // Create FormData for file upload\n      const formData = new FormData();\n      formData.append('video', file);\n      \n      // Send file to backend with timeout\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 300000); // 5 minutes timeout\n      \n      const response = await fetch('/api/upload-video', {\n        method: 'POST',\n        body: formData,\n        signal: controller.signal,\n      });\n      \n      clearTimeout(timeoutId);\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Upload failed');\n      }\n      \n      const result = await response.json();\n      \n      // Update progress to 100%\n      setUploadProgress(100);\n      \n      // Store the access link\n      setAccessLink(result.access_link);\n      \n      console.log('Upload successful:', result);\n      console.log('Repository UUID:', result.repo_uuid);\n      console.log('Access link:', result.access_link);\n      \n    } catch (err) {\n      if (err.name === 'AbortError') {\n        setError('Upload timed out. Video processing is taking longer than expected.');\n      } else {\n        setError('Upload failed: ' + err.message);\n      }\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  // Format file size\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          The AI solution to remove flash from videos and replace individual frames in videos.\n        </p>\n      </header>\n\n      <div className=\"upload-container\">\n        <div \n          className={`upload-area ${isDragOver ? 'drag-over' : ''} ${selectedFile ? 'has-file' : ''}`}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          {!selectedFile ? (\n            <>\n              <div className=\"upload-icon\">📁</div>\n              <h3>Upload your video</h3>\n              <p>Drag and drop your video file here, or click to browse</p>\n              <p className=\"upload-limits\">\n                Supported formats: MP4, AVI, MOV<br />\n                Maximum size: 500MB\n              </p>\n              <input\n                type=\"file\"\n                id=\"file-input\"\n                accept=\"video/mp4,video/avi,video/mov,video/quicktime\"\n                onChange={handleFileInputChange}\n                style={{ display: 'none' }}\n              />\n              <label htmlFor=\"file-input\" className=\"browse-button\">\n                Browse Files\n              </label>\n            </>\n          ) : (\n            <div className=\"file-info\">\n              <div className=\"file-icon\">🎥</div>\n              <h3>{selectedFile.name}</h3>\n              <p>Size: {formatFileSize(selectedFile.size)}</p>\n              <p>Type: {selectedFile.type}</p>\n            </div>\n          )}\n        </div>\n\n        {isUploading && (\n          <div className=\"upload-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${uploadProgress}%` }}\n              ></div>\n            </div>\n            <p>Uploading... {uploadProgress}%</p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-message\">\n            {error}\n          </div>\n        )}\n\n        {accessLink && (\n          <div className=\"success-message\">\n            <p>Upload successful!</p>\n            <p>Your video is ready at: <a href={accessLink} target=\"_blank\" rel=\"noopener noreferrer\">{accessLink}</a></p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}