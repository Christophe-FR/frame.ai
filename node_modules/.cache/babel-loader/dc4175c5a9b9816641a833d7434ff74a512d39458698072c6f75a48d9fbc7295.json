{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadInterface() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSpeed, setUploadSpeed] = useState(0);\n  const [uploadStartTime, setUploadStartTime] = useState(null);\n  const navigate = useNavigate();\n  const handleFileSelect = file => {\n    console.log('📂 File selected:', {\n      name: file === null || file === void 0 ? void 0 : file.name,\n      type: file === null || file === void 0 ? void 0 : file.type,\n      size: file === null || file === void 0 ? void 0 : file.size\n    });\n    if (file && file.type.startsWith('video/')) {\n      console.log('✅ Valid video file selected');\n      setSelectedFile(file);\n      setUploadStatus('');\n      // Automatically start upload when file is selected\n      handleUpload(file);\n    } else {\n      console.warn('❌ Invalid file type selected:', file === null || file === void 0 ? void 0 : file.type);\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n  const handleFileInputChange = e => {\n    console.log('🖱️ File input change event');\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n  const handleUpload = file => {\n    if (!file) {\n      console.error('❌ No file provided');\n      return;\n    }\n\n    // Validate file type\n    if (!file.type.startsWith('video/')) {\n      console.error('❌ Invalid file type:', file.type);\n      setUploadStatus('Please select a valid video file.');\n      return;\n    }\n    console.log('🚀 Starting upload process...');\n    console.log('📁 File details:', {\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      lastModified: new Date(file.lastModified).toISOString()\n    });\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadStatus('Uploading video...');\n    const formData = new FormData();\n    formData.append('file', file);\n    console.log('📦 FormData created with file');\n\n    // Use XMLHttpRequest for progress tracking\n    const xhr = new XMLHttpRequest();\n\n    // Track upload progress\n    xhr.upload.addEventListener('progress', event => {\n      if (event.lengthComputable) {\n        const percentComplete = Math.round(event.loaded / event.total * 100);\n        console.log(`📊 Upload progress: ${percentComplete}%`);\n        setUploadProgress(percentComplete);\n        setUploadStatus(`Uploading video... ${percentComplete}%`);\n      }\n    });\n\n    // Handle upload completion\n    xhr.addEventListener('load', () => {\n      console.log('📡 Response received:', {\n        status: xhr.status,\n        statusText: xhr.statusText\n      });\n      if (xhr.status >= 200 && xhr.status < 300) {\n        try {\n          const data = JSON.parse(xhr.responseText);\n          console.log('✅ Upload successful! Response data:', data);\n          setUploadStatus('Upload successful! Processing video...');\n          setUploadProgress(100);\n          console.log('🔄 Navigating to frames page in 1 second...');\n          // Wait a moment for processing to start, then navigate\n          setTimeout(() => {\n            console.log('🎬 Navigating to:', `/frames/${data.uuid}`);\n            navigate(`/frames/${data.uuid}`);\n          }, 1000);\n        } catch (error) {\n          console.error('❌ Failed to parse response:', error);\n          setUploadStatus('Upload failed: Invalid server response');\n          setUploadProgress(0);\n        }\n      } else {\n        console.error('❌ Upload failed:', {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          response: xhr.responseText\n        });\n\n        // Try to extract error message from response\n        let errorMessage = 'Upload failed';\n        try {\n          const errorData = JSON.parse(xhr.responseText);\n          if (errorData.detail) {\n            errorMessage = errorData.detail;\n          } else if (errorData.message) {\n            errorMessage = errorData.message;\n          } else if (typeof errorData === 'string') {\n            errorMessage = errorData;\n          } else if (errorData && typeof errorData === 'object') {\n            errorMessage = JSON.stringify(errorData);\n          }\n        } catch (parseError) {\n          errorMessage = xhr.statusText || 'Upload failed';\n        }\n        setUploadStatus('Upload failed: ' + errorMessage);\n        setUploadProgress(0);\n      }\n      setUploading(false);\n    });\n\n    // Handle upload errors\n    xhr.addEventListener('error', () => {\n      console.error('💥 Upload error: Network error');\n      setUploadStatus('Upload failed: Network error');\n      setUploadProgress(0);\n      setUploading(false);\n    });\n\n    // Handle upload timeout\n    xhr.addEventListener('timeout', () => {\n      console.error('⏰ Upload timeout');\n      setUploadStatus('Upload failed: Request timeout');\n      setUploadProgress(0);\n      setUploading(false);\n    });\n\n    // Start the upload\n    console.log('🌐 Making API call to /upload_video...');\n    xhr.open('POST', 'http://localhost:8000/upload_video');\n    xhr.timeout = 300000; // 5 minutes timeout for large files\n    xhr.send(formData);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    console.log('📥 File dropped');\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    console.log('📤 File drag over');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"Upload a video to remove flash and replace individual frames using AI.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-area ${selectedFile ? 'has-file' : ''} ${uploading ? 'uploading' : ''}`,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"video/*\",\n          onChange: handleFileInputChange,\n          id: \"file-input\",\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"upload-label\",\n          children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Selected: \", selectedFile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"file-info\",\n              children: [\"Size: \", formatFileSize(selectedFile.size)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-status\",\n              children: \"Uploading automatically...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD83D\\uDCC1 Drop video file here or click to select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"upload-hint\",\n              children: \"Upload starts automatically when video is selected\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${uploadProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: uploadStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), uploadStatus && !uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"upload-status\",\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadInterface, \"V70yME/853UlSpa5K+R4o3EJ08c=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadInterface;\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nfunction FrameDisplay() {\n  _s2();\n  const {\n    repoUuid\n  } = useParams();\n  const navigate = useNavigate();\n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      fetchTotalFrames(repoUuid);\n      fetchFramesFromRepo(repoUuid);\n    }\n  }, [repoUuid, currentPage]); // Only fetch when repoUuid or currentPage changes\n\n  const fetchTotalFrames = async uuid => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n  const fetchFramesFromRepo = async (uuid, silent = false) => {\n    if (!silent) {\n      setLoading(true);\n      console.log(`🔄 Fetching frames for ${uuid}, page ${currentPage}, start=${(currentPage - 1) * framesPerPage}, end=${(currentPage - 1) * framesPerPage + framesPerPage - 1}`);\n    }\n    try {\n      // Calculate the start and end indices for the current page\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n\n      // Check cache first\n      const cacheKey = `${uuid}-${start}-${end}`;\n      if (frameCache.has(cacheKey)) {\n        console.log(`📦 Using cached frames for ${cacheKey}`);\n        setFrames(frameCache.get(cacheKey));\n        setLastUpdate(new Date());\n        if (!silent) {\n          setLoading(false);\n        }\n        return;\n      }\n      console.log(`🌐 Making API request to: http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      console.log(`📡 Response status: ${response.status}`);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch frames: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(`✅ Received ${data.frames.length} frames`);\n\n      // Cache the result\n      frameCache.set(cacheKey, data.frames);\n\n      // Limit cache size to prevent memory issues\n      if (frameCache.size > 50) {\n        const firstKey = frameCache.keys().next().value;\n        frameCache.delete(firstKey);\n      }\n      setFrames(data.frames);\n      setLastUpdate(new Date());\n      if (!silent) {\n        console.log(`Frames loaded: ${data.frames.length} frames for page ${currentPage}`);\n      }\n    } catch (err) {\n      console.error(`❌ Error in fetchFramesFromRepo:`, err);\n      if (!silent) {\n        setError('Failed to load frames: ' + err.message);\n      }\n    } finally {\n      if (!silent) {\n        setLoading(false);\n        console.log(`🏁 Loading finished`);\n      }\n    }\n  };\n\n  // Pagination functions\n  const goToPage = useCallback(page => {\n    setCurrentPage(page);\n  }, []);\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Calculate current frames to display\n  const currentFrames = frames; // No need to slice since API returns only the frames for current page\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"The AI solution to remove flash from videos and replace individual frames in videos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"repo-info\",\n        children: [\"Viewing frames from repository: \", repoUuid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading frames...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total frames: \", totalFrames]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"last-update\",\n          children: [\"Last updated: \", lastUpdate.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchFramesFromRepo(repoUuid),\n          className: \"refresh-button\",\n          disabled: loading,\n          children: loading ? 'Refreshing...' : '🔄 Refresh'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frames-grid\",\n        children: currentFrames.map((framePath, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000/${framePath}`,\n            alt: `Frame ${(currentPage - 1) * framesPerPage + index + 1}`,\n            className: \"frame-image\",\n            loading: \"lazy\",\n            onError: e => {\n              console.error(`Failed to load image: ${framePath}`);\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frame-info\",\n            children: [\"Frame \", (currentPage - 1) * framesPerPage + index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), totalFrames > framesPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPrevPage,\n          disabled: currentPage === 1,\n          className: \"page-button\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-numbers\",\n          children: Array.from({\n            length: Math.ceil(totalFrames / framesPerPage)\n          }, (_, i) => i + 1).filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) || page >= currentPage - 2 && page <= currentPage + 2).map((page, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [index > 0 && array[index - 1] !== page - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-ellipsis\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToPage(page),\n              className: `page-button ${currentPage === page ? 'active' : ''}`,\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 23\n            }, this)]\n          }, page, true, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextPage,\n          disabled: currentPage === Math.ceil(totalFrames / framesPerPage),\n          className: \"page-button\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s2(FrameDisplay, \"npeqYaehoB8uQM5zfN9rnGAWi4E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = FrameDisplay;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UploadInterface, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/frames/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UploadInterface\");\n$RefreshReg$(_c2, \"FrameDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","useParams","useNavigate","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadInterface","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","uploadSpeed","setUploadSpeed","uploadStartTime","setUploadStartTime","navigate","handleFileSelect","file","console","log","name","type","size","startsWith","handleUpload","warn","handleFileInputChange","e","target","files","error","lastModified","Date","toISOString","formData","FormData","append","xhr","XMLHttpRequest","upload","addEventListener","event","lengthComputable","percentComplete","Math","round","loaded","total","status","statusText","data","JSON","parse","responseText","setTimeout","uuid","response","errorMessage","errorData","detail","message","stringify","parseError","open","timeout","send","handleDrop","preventDefault","dataTransfer","handleDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","accept","onChange","id","style","display","htmlFor","formatFileSize","width","_c","bytes","k","sizes","i","floor","parseFloat","pow","toFixed","FrameDisplay","_s2","repoUuid","frames","setFrames","loading","setLoading","setError","totalFrames","setTotalFrames","currentPage","setCurrentPage","lastUpdate","setLastUpdate","framesPerPage","frameCache","Map","fetchTotalFrames","fetchFramesFromRepo","fetch","ok","json","err","silent","start","end","cacheKey","has","get","errorText","text","Error","length","set","firstKey","keys","next","value","delete","goToPage","page","goToNextPage","ceil","goToPrevPage","currentFrames","onClick","toLocaleTimeString","disabled","map","framePath","index","src","alt","onError","Array","from","_","filter","array","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction UploadInterface() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [uploadSpeed, setUploadSpeed] = useState(0);\n  const [uploadStartTime, setUploadStartTime] = useState(null);\n  const navigate = useNavigate();\n\n  const handleFileSelect = (file) => {\n    console.log('📂 File selected:', {\n      name: file?.name,\n      type: file?.type,\n      size: file?.size\n    });\n    \n    if (file && file.type.startsWith('video/')) {\n      console.log('✅ Valid video file selected');\n      setSelectedFile(file);\n      setUploadStatus('');\n      // Automatically start upload when file is selected\n      handleUpload(file);\n    } else {\n      console.warn('❌ Invalid file type selected:', file?.type);\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n\n  const handleFileInputChange = (e) => {\n    console.log('🖱️ File input change event');\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleUpload = (file) => {\n    if (!file) {\n      console.error('❌ No file provided');\n      return;\n    }\n\n    // Validate file type\n    if (!file.type.startsWith('video/')) {\n      console.error('❌ Invalid file type:', file.type);\n      setUploadStatus('Please select a valid video file.');\n      return;\n    }\n\n    console.log('🚀 Starting upload process...');\n    console.log('📁 File details:', {\n      name: file.name,\n      size: file.size,\n      type: file.type,\n      lastModified: new Date(file.lastModified).toISOString()\n    });\n\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadStatus('Uploading video...');\n\n    const formData = new FormData();\n    formData.append('file', file);\n    console.log('📦 FormData created with file');\n\n    // Use XMLHttpRequest for progress tracking\n    const xhr = new XMLHttpRequest();\n    \n    // Track upload progress\n    xhr.upload.addEventListener('progress', (event) => {\n      if (event.lengthComputable) {\n        const percentComplete = Math.round((event.loaded / event.total) * 100);\n        console.log(`📊 Upload progress: ${percentComplete}%`);\n        setUploadProgress(percentComplete);\n        setUploadStatus(`Uploading video... ${percentComplete}%`);\n      }\n    });\n\n    // Handle upload completion\n    xhr.addEventListener('load', () => {\n      console.log('📡 Response received:', {\n        status: xhr.status,\n        statusText: xhr.statusText\n      });\n\n      if (xhr.status >= 200 && xhr.status < 300) {\n        try {\n          const data = JSON.parse(xhr.responseText);\n          console.log('✅ Upload successful! Response data:', data);\n          setUploadStatus('Upload successful! Processing video...');\n          setUploadProgress(100);\n          \n          console.log('🔄 Navigating to frames page in 1 second...');\n          // Wait a moment for processing to start, then navigate\n          setTimeout(() => {\n            console.log('🎬 Navigating to:', `/frames/${data.uuid}`);\n            navigate(`/frames/${data.uuid}`);\n          }, 1000);\n        } catch (error) {\n          console.error('❌ Failed to parse response:', error);\n          setUploadStatus('Upload failed: Invalid server response');\n          setUploadProgress(0);\n        }\n      } else {\n        console.error('❌ Upload failed:', {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          response: xhr.responseText\n        });\n        \n        // Try to extract error message from response\n        let errorMessage = 'Upload failed';\n        try {\n          const errorData = JSON.parse(xhr.responseText);\n          if (errorData.detail) {\n            errorMessage = errorData.detail;\n          } else if (errorData.message) {\n            errorMessage = errorData.message;\n          } else if (typeof errorData === 'string') {\n            errorMessage = errorData;\n          } else if (errorData && typeof errorData === 'object') {\n            errorMessage = JSON.stringify(errorData);\n          }\n        } catch (parseError) {\n          errorMessage = xhr.statusText || 'Upload failed';\n        }\n        \n        setUploadStatus('Upload failed: ' + errorMessage);\n        setUploadProgress(0);\n      }\n      \n      setUploading(false);\n    });\n\n    // Handle upload errors\n    xhr.addEventListener('error', () => {\n      console.error('💥 Upload error: Network error');\n      setUploadStatus('Upload failed: Network error');\n      setUploadProgress(0);\n      setUploading(false);\n    });\n\n    // Handle upload timeout\n    xhr.addEventListener('timeout', () => {\n      console.error('⏰ Upload timeout');\n      setUploadStatus('Upload failed: Request timeout');\n      setUploadProgress(0);\n      setUploading(false);\n    });\n\n    // Start the upload\n    console.log('🌐 Making API call to /upload_video...');\n    xhr.open('POST', 'http://localhost:8000/upload_video');\n    xhr.timeout = 300000; // 5 minutes timeout for large files\n    xhr.send(formData);\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    console.log('📥 File dropped');\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    console.log('📤 File drag over');\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          Upload a video to remove flash and replace individual frames using AI.\n        </p>\n      </header>\n      \n      <div className=\"upload-container\">\n        <div \n          className={`upload-area ${selectedFile ? 'has-file' : ''} ${uploading ? 'uploading' : ''}`}\n          onDrop={handleDrop}\n          onDragOver={handleDragOver}\n        >\n          <input\n            type=\"file\"\n            accept=\"video/*\"\n            onChange={handleFileInputChange}\n            id=\"file-input\"\n            style={{ display: 'none' }}\n          />\n          <label htmlFor=\"file-input\" className=\"upload-label\">\n            {selectedFile ? (\n              <div>\n                <p>Selected: {selectedFile.name}</p>\n                <p className=\"file-info\">\n                  Size: {formatFileSize(selectedFile.size)}\n                </p>\n                {uploading && <p className=\"upload-status\">Uploading automatically...</p>}\n              </div>\n            ) : (\n              <div>\n                <p>📁 Drop video file here or click to select</p>\n                <p className=\"upload-hint\">Upload starts automatically when video is selected</p>\n              </div>\n            )}\n          </label>\n        </div>\n\n\n\n        {uploading && (\n          <div className=\"upload-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ width: `${uploadProgress}%` }}\n              ></div>\n            </div>\n            <p>{uploadStatus}</p>\n          </div>\n        )}\n\n        {uploadStatus && !uploading && (\n          <p className=\"upload-status\">{uploadStatus}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction FrameDisplay() {\n  const { repoUuid } = useParams();\n  const navigate = useNavigate();\n  \n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  \n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      fetchTotalFrames(repoUuid);\n      fetchFramesFromRepo(repoUuid);\n    }\n  }, [repoUuid, currentPage]); // Only fetch when repoUuid or currentPage changes\n\n  const fetchTotalFrames = async (uuid) => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n\n  const fetchFramesFromRepo = async (uuid, silent = false) => {\n    if (!silent) {\n      setLoading(true);\n      console.log(`🔄 Fetching frames for ${uuid}, page ${currentPage}, start=${(currentPage - 1) * framesPerPage}, end=${(currentPage - 1) * framesPerPage + framesPerPage - 1}`);\n    }\n    \n    try {\n      // Calculate the start and end indices for the current page\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n      \n      // Check cache first\n      const cacheKey = `${uuid}-${start}-${end}`;\n      if (frameCache.has(cacheKey)) {\n        console.log(`📦 Using cached frames for ${cacheKey}`);\n        setFrames(frameCache.get(cacheKey));\n        setLastUpdate(new Date());\n        if (!silent) {\n          setLoading(false);\n        }\n        return;\n      }\n      \n      console.log(`🌐 Making API request to: http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      console.log(`📡 Response status: ${response.status}`);\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch frames: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      console.log(`✅ Received ${data.frames.length} frames`);\n      \n      // Cache the result\n      frameCache.set(cacheKey, data.frames);\n      \n      // Limit cache size to prevent memory issues\n      if (frameCache.size > 50) {\n        const firstKey = frameCache.keys().next().value;\n        frameCache.delete(firstKey);\n      }\n      \n      setFrames(data.frames);\n      setLastUpdate(new Date());\n      \n      if (!silent) {\n        console.log(`Frames loaded: ${data.frames.length} frames for page ${currentPage}`);\n      }\n    } catch (err) {\n      console.error(`❌ Error in fetchFramesFromRepo:`, err);\n      if (!silent) {\n        setError('Failed to load frames: ' + err.message);\n      }\n    } finally {\n      if (!silent) {\n        setLoading(false);\n        console.log(`🏁 Loading finished`);\n      }\n    }\n  };\n\n  // Pagination functions\n  const goToPage = useCallback((page) => {\n    setCurrentPage(page);\n  }, []);\n\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Calculate current frames to display\n  const currentFrames = frames; // No need to slice since API returns only the frames for current page\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          The AI solution to remove flash from videos and replace individual frames in videos.\n        </p>\n        <p className=\"repo-info\">\n          Viewing frames from repository: {repoUuid}\n        </p>\n        <button \n          onClick={() => navigate('/')} \n          className=\"back-button\"\n        >\n          ← Back to Upload\n        </button>\n      </header>\n\n      {loading ? (\n        <div className=\"loading\">Loading frames...</div>\n      ) : (\n        <>\n          <div className=\"info\">\n            <p>Total frames: {totalFrames}</p>\n            {lastUpdate && (\n              <p className=\"last-update\">\n                Last updated: {lastUpdate.toLocaleTimeString()}\n              </p>\n            )}\n            <button \n              onClick={() => fetchFramesFromRepo(repoUuid)} \n              className=\"refresh-button\"\n              disabled={loading}\n            >\n              {loading ? 'Refreshing...' : '🔄 Refresh'}\n            </button>\n          </div>\n\n          <div className=\"frames-grid\">\n            {currentFrames.map((framePath, index) => (\n              <div key={index} className=\"frame-container\">\n                <img \n                  src={`http://localhost:8000/${framePath}`}\n                  alt={`Frame ${(currentPage - 1) * framesPerPage + index + 1}`}\n                  className=\"frame-image\"\n                  loading=\"lazy\"\n                  onError={(e) => {\n                    console.error(`Failed to load image: ${framePath}`);\n                    e.target.style.display = 'none';\n                  }}\n                />\n                <div className=\"frame-info\">\n                  Frame {(currentPage - 1) * framesPerPage + index + 1}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {totalFrames > framesPerPage && (\n            <div className=\"pagination\">\n              <button \n                onClick={goToPrevPage} \n                disabled={currentPage === 1}\n                className=\"page-button\"\n              >\n                ← Previous\n              </button>\n              \n              <div className=\"page-numbers\">\n                {Array.from({ length: Math.ceil(totalFrames / framesPerPage) }, (_, i) => i + 1)\n                  .filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) ||\n                                 (page >= currentPage - 2 && page <= currentPage + 2))\n                  .map((page, index, array) => (\n                    <React.Fragment key={page}>\n                      {index > 0 && array[index - 1] !== page - 1 && (\n                        <span className=\"page-ellipsis\">...</span>\n                      )}\n                      <button\n                        onClick={() => goToPage(page)}\n                        className={`page-button ${currentPage === page ? 'active' : ''}`}\n                      >\n                        {page}\n                      </button>\n                    </React.Fragment>\n                  ))}\n              </div>\n              \n              <button \n                onClick={goToNextPage} \n                disabled={currentPage === Math.ceil(totalFrames / framesPerPage)}\n                className=\"page-button\"\n              >\n                Next →\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      {error && (\n        <div className=\"error\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<UploadInterface />} />\n      <Route path=\"/frames/:repoUuid\" element={<FrameDisplay />} />\n      <Route path=\"/:repoUuid\" element={<FrameDisplay />} />\n    </Routes>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}