{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UploadInterface() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const navigate = useNavigate();\n  const handleFileSelect = file => {\n    if (file && file.type.startsWith('video/')) {\n      setSelectedFile(file);\n      setUploadStatus('');\n    } else {\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n  const handleUpload = async file => {\n    if (!file) return;\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadStatus('Uploading video...');\n    const formData = new FormData();\n    formData.append('video', file);\n    try {\n      const response = await fetch('http://localhost:8000/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUploadStatus('Upload successful! Processing video...');\n        setUploadProgress(100);\n\n        // Wait a moment for processing to start, then navigate\n        setTimeout(() => {\n          navigate(`/frames/${data.repo_uuid}`);\n        }, 1000);\n      } else {\n        throw new Error('Upload failed');\n      }\n    } catch (error) {\n      setUploadStatus('Upload failed: ' + error.message);\n      setUploadProgress(0);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"description\",\n      children: \"Upload a video to remove flash and replace individual frames using AI.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-area\",\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleFileInputChange,\n        id: \"file-input\",\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-input\",\n        className: \"upload-label\",\n        children: selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Selected: \", selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-info\",\n            children: [\"Size: \", formatFileSize(selectedFile.size)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD83D\\uDCC1 Drop video file here or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"upload-hint\",\n            children: \"Supports MP4, AVI, MOV, and other video formats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleUpload(selectedFile),\n      disabled: uploading,\n      className: \"upload-button\",\n      children: uploading ? 'Uploading...' : 'Upload Video'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${uploadProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: uploadStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this), uploadStatus && !uploading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upload-status\",\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadInterface, \"PulQ9EAa396Yp2HNMa/Y38DNB7o=\", false, function () {\n  return [useNavigate];\n});\n_c = UploadInterface;\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\nfunction FrameDisplay() {\n  _s2();\n  const {\n    repoUuid\n  } = useParams();\n  const navigate = useNavigate();\n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      fetchTotalFrames(repoUuid);\n      fetchFramesFromRepo(repoUuid);\n    }\n  }, [repoUuid, currentPage]); // Only fetch when repoUuid or currentPage changes\n\n  const fetchTotalFrames = async uuid => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n  const fetchFramesFromRepo = async (uuid, silent = false) => {\n    if (!silent) {\n      setLoading(true);\n      console.log(`🔄 Fetching frames for ${uuid}, page ${currentPage}, start=${(currentPage - 1) * framesPerPage}, end=${(currentPage - 1) * framesPerPage + framesPerPage - 1}`);\n    }\n    try {\n      // Calculate the start and end indices for the current page\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n\n      // Check cache first\n      const cacheKey = `${uuid}-${start}-${end}`;\n      if (frameCache.has(cacheKey)) {\n        console.log(`📦 Using cached frames for ${cacheKey}`);\n        setFrames(frameCache.get(cacheKey));\n        setLastUpdate(new Date());\n        if (!silent) {\n          setLoading(false);\n        }\n        return;\n      }\n      console.log(`🌐 Making API request to: http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      console.log(`📡 Response status: ${response.status}`);\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch frames: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(`✅ Received ${data.frames.length} frames`);\n\n      // Cache the result\n      frameCache.set(cacheKey, data.frames);\n\n      // Limit cache size to prevent memory issues\n      if (frameCache.size > 50) {\n        const firstKey = frameCache.keys().next().value;\n        frameCache.delete(firstKey);\n      }\n      setFrames(data.frames);\n      setLastUpdate(new Date());\n      if (!silent) {\n        console.log(`Frames loaded: ${data.frames.length} frames for page ${currentPage}`);\n      }\n    } catch (err) {\n      console.error(`❌ Error in fetchFramesFromRepo:`, err);\n      if (!silent) {\n        setError('Failed to load frames: ' + err.message);\n      }\n    } finally {\n      if (!silent) {\n        setLoading(false);\n        console.log(`🏁 Loading finished`);\n      }\n    }\n  };\n\n  // Pagination functions\n  const goToPage = useCallback(page => {\n    setCurrentPage(page);\n  }, []);\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Calculate current frames to display\n  const currentFrames = frames; // No need to slice since API returns only the frames for current page\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remove this Flash \\u26A1\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: \"The AI solution to remove flash from videos and replace individual frames in videos.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"repo-info\",\n        children: [\"Viewing frames from repository: \", repoUuid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/'),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading frames...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total frames: \", totalFrames]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), lastUpdate && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"last-update\",\n          children: [\"Last updated: \", lastUpdate.toLocaleTimeString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fetchFramesFromRepo(repoUuid),\n          className: \"refresh-button\",\n          disabled: loading,\n          children: loading ? 'Refreshing...' : '🔄 Refresh'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"frames-grid\",\n        children: currentFrames.map((framePath, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frame-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8000${framePath}`,\n            alt: `Frame ${(currentPage - 1) * framesPerPage + index + 1}`,\n            className: \"frame-image\",\n            loading: \"lazy\",\n            onError: e => {\n              console.error(`Failed to load image: ${framePath}`);\n              e.target.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frame-info\",\n            children: [\"Frame \", (currentPage - 1) * framesPerPage + index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), totalFrames > framesPerPage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToPrevPage,\n          disabled: currentPage === 1,\n          className: \"page-button\",\n          children: \"\\u2190 Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-numbers\",\n          children: Array.from({\n            length: Math.ceil(totalFrames / framesPerPage)\n          }, (_, i) => i + 1).filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) || page >= currentPage - 2 && page <= currentPage + 2).map((page, index, array) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [index > 0 && array[index - 1] !== page - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"page-ellipsis\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => goToPage(page),\n              className: `page-button ${currentPage === page ? 'active' : ''}`,\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 23\n            }, this)]\n          }, page, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: goToNextPage,\n          disabled: currentPage === Math.ceil(totalFrames / framesPerPage),\n          className: \"page-button\",\n          children: \"Next \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n}\n_s2(FrameDisplay, \"npeqYaehoB8uQM5zfN9rnGAWi4E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = FrameDisplay;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UploadInterface, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/frames/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:repoUuid\",\n      element: /*#__PURE__*/_jsxDEV(FrameDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n}\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UploadInterface\");\n$RefreshReg$(_c2, \"FrameDisplay\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useMemo","useParams","useNavigate","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","UploadInterface","_s","selectedFile","setSelectedFile","uploading","setUploading","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","navigate","handleFileSelect","file","type","startsWith","handleFileInputChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","data","json","setTimeout","repo_uuid","Error","error","message","handleDrop","preventDefault","dataTransfer","handleDragOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","accept","onChange","id","style","display","htmlFor","name","formatFileSize","size","onClick","disabled","width","_c","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","FrameDisplay","_s2","repoUuid","frames","setFrames","loading","setLoading","setError","totalFrames","setTotalFrames","currentPage","setCurrentPage","lastUpdate","setLastUpdate","framesPerPage","frameCache","Map","console","fetchTotalFrames","fetchFramesFromRepo","uuid","total","err","silent","start","end","cacheKey","has","get","Date","status","errorText","text","length","set","firstKey","keys","next","value","delete","goToPage","page","goToNextPage","ceil","goToPrevPage","currentFrames","toLocaleTimeString","map","framePath","index","src","alt","onError","Array","from","_","filter","array","_c2","App","path","element","_c3","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, Routes, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction UploadInterface() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const navigate = useNavigate();\n\n  const handleFileSelect = (file) => {\n    if (file && file.type.startsWith('video/')) {\n      setSelectedFile(file);\n      setUploadStatus('');\n    } else {\n      setUploadStatus('Please select a valid video file.');\n      setSelectedFile(null);\n    }\n  };\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleUpload = async (file) => {\n    if (!file) return;\n\n    setUploading(true);\n    setUploadProgress(0);\n    setUploadStatus('Uploading video...');\n\n    const formData = new FormData();\n    formData.append('video', file);\n\n    try {\n      const response = await fetch('http://localhost:8000/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setUploadStatus('Upload successful! Processing video...');\n        setUploadProgress(100);\n        \n        // Wait a moment for processing to start, then navigate\n        setTimeout(() => {\n          navigate(`/frames/${data.repo_uuid}`);\n        }, 1000);\n      } else {\n        throw new Error('Upload failed');\n      }\n    } catch (error) {\n      setUploadStatus('Upload failed: ' + error.message);\n      setUploadProgress(0);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleDrop = (e) => {\n    e.preventDefault();\n    const file = e.dataTransfer.files[0];\n    handleFileSelect(file);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h1>Remove this Flash ⚡🎥</h1>\n      <p className=\"description\">\n        Upload a video to remove flash and replace individual frames using AI.\n      </p>\n      \n      <div \n        className=\"upload-area\"\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n      >\n        <input\n          type=\"file\"\n          accept=\"video/*\"\n          onChange={handleFileInputChange}\n          id=\"file-input\"\n          style={{ display: 'none' }}\n        />\n        <label htmlFor=\"file-input\" className=\"upload-label\">\n          {selectedFile ? (\n            <div>\n              <p>Selected: {selectedFile.name}</p>\n              <p className=\"file-info\">\n                Size: {formatFileSize(selectedFile.size)}\n              </p>\n            </div>\n          ) : (\n            <div>\n              <p>📁 Drop video file here or click to select</p>\n              <p className=\"upload-hint\">Supports MP4, AVI, MOV, and other video formats</p>\n            </div>\n          )}\n        </label>\n      </div>\n\n      {selectedFile && (\n        <button \n          onClick={() => handleUpload(selectedFile)}\n          disabled={uploading}\n          className=\"upload-button\"\n        >\n          {uploading ? 'Uploading...' : 'Upload Video'}\n        </button>\n      )}\n\n      {uploading && (\n        <div className=\"upload-progress\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${uploadProgress}%` }}\n            ></div>\n          </div>\n          <p>{uploadStatus}</p>\n        </div>\n      )}\n\n      {uploadStatus && !uploading && (\n        <p className=\"upload-status\">{uploadStatus}</p>\n      )}\n    </div>\n  );\n}\n\nfunction formatFileSize(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\nfunction FrameDisplay() {\n  const { repoUuid } = useParams();\n  const navigate = useNavigate();\n  \n  const [frames, setFrames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [totalFrames, setTotalFrames] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lastUpdate, setLastUpdate] = useState(null);\n  \n  const framesPerPage = 20;\n\n  // Memoize the frame cache to avoid unnecessary re-renders\n  const frameCache = useMemo(() => new Map(), []);\n\n  useEffect(() => {\n    if (repoUuid) {\n      console.log(`🎬 Loading frames for repo: ${repoUuid}`);\n      fetchTotalFrames(repoUuid);\n      fetchFramesFromRepo(repoUuid);\n    }\n  }, [repoUuid, currentPage]); // Only fetch when repoUuid or currentPage changes\n\n  const fetchTotalFrames = async (uuid) => {\n    try {\n      const response = await fetch(`http://localhost:8000/${uuid}/frames/count`);\n      if (response.ok) {\n        const data = await response.json();\n        setTotalFrames(data.total);\n      }\n    } catch (err) {\n      console.error('Failed to get total frames count:', err);\n    }\n  };\n\n  const fetchFramesFromRepo = async (uuid, silent = false) => {\n    if (!silent) {\n      setLoading(true);\n      console.log(`🔄 Fetching frames for ${uuid}, page ${currentPage}, start=${(currentPage - 1) * framesPerPage}, end=${(currentPage - 1) * framesPerPage + framesPerPage - 1}`);\n    }\n    \n    try {\n      // Calculate the start and end indices for the current page\n      const start = (currentPage - 1) * framesPerPage;\n      const end = start + framesPerPage - 1;\n      \n      // Check cache first\n      const cacheKey = `${uuid}-${start}-${end}`;\n      if (frameCache.has(cacheKey)) {\n        console.log(`📦 Using cached frames for ${cacheKey}`);\n        setFrames(frameCache.get(cacheKey));\n        setLastUpdate(new Date());\n        if (!silent) {\n          setLoading(false);\n        }\n        return;\n      }\n      \n      console.log(`🌐 Making API request to: http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      const response = await fetch(`http://localhost:8000/${uuid}/frames?start=${start}&end=${end}`);\n      console.log(`📡 Response status: ${response.status}`);\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(`❌ API error: ${response.status} - ${errorText}`);\n        throw new Error(`Failed to fetch frames: ${response.status} - ${errorText}`);\n      }\n      \n      const data = await response.json();\n      console.log(`✅ Received ${data.frames.length} frames`);\n      \n      // Cache the result\n      frameCache.set(cacheKey, data.frames);\n      \n      // Limit cache size to prevent memory issues\n      if (frameCache.size > 50) {\n        const firstKey = frameCache.keys().next().value;\n        frameCache.delete(firstKey);\n      }\n      \n      setFrames(data.frames);\n      setLastUpdate(new Date());\n      \n      if (!silent) {\n        console.log(`Frames loaded: ${data.frames.length} frames for page ${currentPage}`);\n      }\n    } catch (err) {\n      console.error(`❌ Error in fetchFramesFromRepo:`, err);\n      if (!silent) {\n        setError('Failed to load frames: ' + err.message);\n      }\n    } finally {\n      if (!silent) {\n        setLoading(false);\n        console.log(`🏁 Loading finished`);\n      }\n    }\n  };\n\n  // Pagination functions\n  const goToPage = useCallback((page) => {\n    setCurrentPage(page);\n  }, []);\n\n  const goToNextPage = useCallback(() => {\n    if (currentPage < Math.ceil(totalFrames / framesPerPage)) {\n      goToPage(currentPage + 1);\n    }\n  }, [currentPage, totalFrames, framesPerPage, goToPage]);\n\n  const goToPrevPage = useCallback(() => {\n    if (currentPage > 1) {\n      goToPage(currentPage - 1);\n    }\n  }, [currentPage, goToPage]);\n\n  // Calculate current frames to display\n  const currentFrames = frames; // No need to slice since API returns only the frames for current page\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>Remove this Flash ⚡🎥</h1>\n        <p className=\"description\">\n          The AI solution to remove flash from videos and replace individual frames in videos.\n        </p>\n        <p className=\"repo-info\">\n          Viewing frames from repository: {repoUuid}\n        </p>\n        <button \n          onClick={() => navigate('/')} \n          className=\"back-button\"\n        >\n          ← Back to Upload\n        </button>\n      </header>\n\n      {loading ? (\n        <div className=\"loading\">Loading frames...</div>\n      ) : (\n        <>\n          <div className=\"info\">\n            <p>Total frames: {totalFrames}</p>\n            {lastUpdate && (\n              <p className=\"last-update\">\n                Last updated: {lastUpdate.toLocaleTimeString()}\n              </p>\n            )}\n            <button \n              onClick={() => fetchFramesFromRepo(repoUuid)} \n              className=\"refresh-button\"\n              disabled={loading}\n            >\n              {loading ? 'Refreshing...' : '🔄 Refresh'}\n            </button>\n          </div>\n\n          <div className=\"frames-grid\">\n            {currentFrames.map((framePath, index) => (\n              <div key={index} className=\"frame-container\">\n                <img \n                  src={`http://localhost:8000${framePath}`}\n                  alt={`Frame ${(currentPage - 1) * framesPerPage + index + 1}`}\n                  className=\"frame-image\"\n                  loading=\"lazy\"\n                  onError={(e) => {\n                    console.error(`Failed to load image: ${framePath}`);\n                    e.target.style.display = 'none';\n                  }}\n                />\n                <div className=\"frame-info\">\n                  Frame {(currentPage - 1) * framesPerPage + index + 1}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {totalFrames > framesPerPage && (\n            <div className=\"pagination\">\n              <button \n                onClick={goToPrevPage} \n                disabled={currentPage === 1}\n                className=\"page-button\"\n              >\n                ← Previous\n              </button>\n              \n              <div className=\"page-numbers\">\n                {Array.from({ length: Math.ceil(totalFrames / framesPerPage) }, (_, i) => i + 1)\n                  .filter(page => page === 1 || page === Math.ceil(totalFrames / framesPerPage) ||\n                                 (page >= currentPage - 2 && page <= currentPage + 2))\n                  .map((page, index, array) => (\n                    <React.Fragment key={page}>\n                      {index > 0 && array[index - 1] !== page - 1 && (\n                        <span className=\"page-ellipsis\">...</span>\n                      )}\n                      <button\n                        onClick={() => goToPage(page)}\n                        className={`page-button ${currentPage === page ? 'active' : ''}`}\n                      >\n                        {page}\n                      </button>\n                    </React.Fragment>\n                  ))}\n              </div>\n              \n              <button \n                onClick={goToNextPage} \n                disabled={currentPage === Math.ceil(totalFrames / framesPerPage)}\n                className=\"page-button\"\n              >\n                Next →\n              </button>\n            </div>\n          )}\n        </>\n      )}\n\n      {error && (\n        <div className=\"error\">\n          {error}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<UploadInterface />} />\n      <Route path=\"/frames/:repoUuid\" element={<FrameDisplay />} />\n      <Route path=\"/:repoUuid\" element={<FrameDisplay />} />\n    </Routes>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}